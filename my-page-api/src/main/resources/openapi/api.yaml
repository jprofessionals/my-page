openapi: 3.0.1
info:
  title: JPro My Page API
  description: API for JPro My Page
  version: 1.0.0
paths:
  /job-posting:
    get:
      tags:
        - JobPosting
      operationId: getJobPostings
      summary: Get job postings
      description: Returns the job postings added by admins. Allows filtering by different criteria.
      responses:
        '200':
          description: A JSON array of job postings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPostings'
        '400':
          description: Bad request
        '500':
          description: Internal server error
    post:
      tags:
        - JobPosting
      operationId: createJobPosting
      summary: Create job postings
      description: Returns the job posting added.
      requestBody:
        description: Job posting to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPosting'
      responses:
        '200':
          description: The added job posting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /job-posting/{id}:
    delete:
      tags:
        - JobPosting
      operationId: deleteJobPosting
      summary: Delete job postings
      description: Returns the deleted job posting
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the job posting to update
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Job posting was deleted
        '400':
          description: Bad request
        '500':
          description: Internal server error
    put:
      tags:
        - JobPosting
      operationId: updateJobPosting
      summary: Update job postings
      description: Returns the job posting that is updated.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the job posting to update
          schema:
            type: integer
            format: int64
      requestBody:
        description: Job posting to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPosting'
      responses:
        '200':
          description: The added job posting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPosting'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /job-posting/{id}/files:
    get:
      tags:
        - JobPosting
      operationId: getJobPostingFiles
      summary: Get all the files associated with a job posting
      description: Get all the files associated with a specific job posting
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the job posting to get files for
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A JSON array of files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPostingFiles'
        '400':
          description: Bad request
        '500':
          description: Internal server error
components:
  schemas:
    Customer:
      type: string
      description: The name of a customer
      example: "Skatteetaten"
    JobPosting:
      type: object
      properties:
        id:
          type: integer
          format: int64
          default: 0
          description: The ID of the job posting
          example: 40
        title:
          type: string
          description: The title of a job posting
          example: "Software Engineer"
        customer:
          $ref: '#/components/schemas/Customer'
        deadline:
          type: string
          format: date-time
          description: The deadline for submitting applications
          example: "2024-10-09T12:00:00+02:00"
        description:
          type: string
          description: The description of the job posting
          example: "Skatteetaten leter etter en dyktig Kotlin-utvikler"
        tags:
          type: array
          description: A list of tags that can be used to filter relevant job postings
          example: [ "Java", "Kotlin", "React" ]
          items:
            $ref: '#/components/schemas/Tag'
        links:
          type: array
          items:
            type: string
      required:
        - id
        - title
        - customer
        - deadline
        - description
        - tags
        - links
    JobPostingFile:
      type: object
      properties:
        name:
          type: string
          description: File name
          example: utlysning.pdf
        url:
          type: string
          format: uri
          description: URL of file
          example: https://www.myfile.no
      required:
        - name
        - url
    JobPostingFiles:
      type: array
      description: List of files
      items:
        $ref: '#/components/schemas/JobPostingFile'
    JobPostings:
      type: array
      description: List of job postings
      items:
        $ref: '#/components/schemas/JobPosting'
    Tag:
      type: string
      description: A tag that describes e.g. a technology or method used in the project
      example: "Kotlin"