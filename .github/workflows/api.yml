name: API
on:
  push:
    paths:
      - '.github/**'
      - 'my-page-api/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
          cache: 'maven'
      - name: Perform build
        run: |
          ./mvnw -pl my-page-api -am package
      - name: Upload jar
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: my-page-api/target/my-page-api-0.0.1-SNAPSHOT.jar
      - name: Upload app.yaml
        uses: actions/upload-artifact@v4
        with:
          name: app.yaml
          path: my-page-api/src/main/appengine/app.yaml
      - name: Upload app-prod.yaml
        uses: actions/upload-artifact@v4
        with:
          name: app-prod.yaml
          path: my-page-api/src/main/appengine/app-prod.yaml
  deploy-test:
    if: github.ref == 'refs/heads/feature/notify_upcoming'
    needs: build
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Download jar
        uses: actions/download-artifact@v4
        with:
          name: jar
      - name: Download app.yaml
        uses: actions/download-artifact@v4
        with:
          name: app.yaml
      - name: Deploy to test
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: my-page-jpro-test
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: app deploy my-page-api-0.0.1-SNAPSHOT.jar --appyaml=app.yaml
  remove-old-versions-test:
    if: github.ref == 'refs/heads/main'
    needs: deploy-test
    runs-on: ubuntu-latest
    environment: test
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: my-page-jpro-test
      - run: gcloud app versions list --service=api --filter="version.createTime < $(date -Idate --date='last month')" --format="value(version.id)" | xargs --no-run-if-empty gcloud app versions delete

  always-run:
    runs-on: ubuntu-latest
    steps:
      - run: "true"
    # Dummy step that always runs
    # This job ensures that deploy-prod does not get skipped even if deploy-test is skipped
    # Add any additional setup or environment preparation steps if required

  deploy-prod:
    if: ${{ always() && github.ref == 'refs/heads/main' && (needs.deploy-test.result == 'success' || needs.deploy-test.result == 'skipped') }}
    needs: [always-run, deploy-test]
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Download jar
        uses: actions/download-artifact@v4
        with:
          name: jar
      - name: Download app-prod.yaml
        uses: actions/download-artifact@v4
        with:
          name: app-prod.yaml
      - name: Deploy to prod
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: my-page-jpro
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: app deploy my-page-api-0.0.1-SNAPSHOT.jar --appyaml=app-prod.yaml
  remove-old-versions-prod:
    if: github.ref == 'refs/heads/main'
    needs: deploy-prod
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: my-page-jpro
      - run: gcloud app versions list --service=api --filter="version.createTime < $(date -Idate --date='last month')" --format="value(version.id)" | xargs --no-run-if-empty gcloud app versions delete

