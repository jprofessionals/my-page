name: infrastructure
on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/**'
      - '.github/workflows/infrastructure.yml'
  pull_request:
    paths:
      - 'infrastructure/**'
      - '.github/workflows/infrastructure.yml'
  workflow_dispatch:

jobs:
  plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: test
    concurrency:
      group: terraform-${{ github.ref }}-test
      cancel-in-progress: true
    defaults:
      run:
        working-directory: infrastructure
    steps:
      - uses: actions/checkout@v5
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.4.6
      - name: Terraform init
        run: |
          terraform init \
            -lockfile=readonly \
            -backend-config="bucket=terraform-state-my-page-jpro-test"
      - uses: dflook/terraform-plan@v2
        with:
          path: infrastructure
          var_file: infrastructure/test.tfvars
          backend_config: bucket=terraform-state-my-page-jpro-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run-terraform-test:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: test
    concurrency: terraform-lock-test
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.4.6
      - run: terraform get
        working-directory: infrastructure
      - run: terraform init -backend-config="bucket=terraform-state-my-page-jpro-test"
        working-directory: infrastructure
      - run: terraform apply -auto-approve -input=false -var-file=test.tfvars
        working-directory: infrastructure
